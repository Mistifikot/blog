import React, { useState, useEffect } from 'react';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, LineChart, Line } from 'recharts';
import { RefreshCcw, Server, DollarSign, ExternalLink } from 'lucide-react';

const Dashboard = () => {
  // Состояние для Docker-контейнеров
  const [containers, setContainers] = useState([
    { id: 'container1', name: 'web-server', status: 'running', image: 'nginx', ports: ['localhost:8080:80'], created: '2 часа назад' },
    { id: 'container2', name: 'database', status: 'running', image: 'postgres', ports: ['localhost:5432:5432'], created: '2 дня назад' },
    { id: 'container3', name: 'redis-cache', status: 'running', image: 'redis', ports: ['localhost:6379:6379'], created: '5 дней назад' },
    { id: 'container4', name: 'api-service', status: 'running', image: 'node:14', ports: ['localhost:3000:3000'], created: '1 день назад' }
  ]);

  // Данные по API затратам
  const [apiUsage, setApiUsage] = useState([
    { name: 'Январь', Anthropic: 12.5, ChatGPT: 8.2, Perplexity: 5.1 },
    { name: 'Февраль', Anthropic: 15.3, ChatGPT: 10.1, Perplexity: 6.2 },
    { name: 'Март', Anthropic: 21.2, ChatGPT: 14.5, Perplexity: 8.4 }
  ]);

  // Ежедневные запросы
  const [dailyRequests, setDailyRequests] = useState([
    { date: '09/03', Anthropic: 120, ChatGPT: 85, Perplexity: 43 },
    { date: '10/03', Anthropic: 145, ChatGPT: 92, Perplexity: 51 },
    { date: '11/03', Anthropic: 132, ChatGPT: 78, Perplexity: 47 },
    { date: '12/03', Anthropic: 150, ChatGPT: 95, Perplexity: 55 },
    { date: '13/03', Anthropic: 180, ChatGPT: 110, Perplexity: 62 }
  ]);

  // Имитация обновления данных
  const refreshData = () => {
    console.log('Обновление данных...');
    // Здесь была бы реальная логика запроса к Docker API и API сервисов
  };

  return (
    <div className="flex flex-col w-full max-w-6xl mx-auto p-4 space-y-4">
      <div className="flex justify-between items-center">
        <h1 className="text-2xl font-bold">Docker и API Мониторинг</h1>
        <button 
          onClick={refreshData} 
          className="flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700"
        >
          <RefreshCcw size={16} />
          Обновить
        </button>
      </div>

      <Tabs defaultValue="docker" className="w-full">
        <TabsList className="mb-4">
          <TabsTrigger value="docker" className="flex items-center gap-1">
            <Server size={16} />
            Docker-сервисы
          </TabsTrigger>
          <TabsTrigger value="api" className="flex items-center gap-1">
            <DollarSign size={16} />
            API Затраты
          </TabsTrigger>
        </TabsList>

        <TabsContent value="docker" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle>Локальные Docker-сервисы</CardTitle>
              <CardDescription>Все активные контейнеры с привязкой к локальным портам</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="overflow-x-auto">
                <table className="w-full border-collapse">
                  <thead>
                    <tr className="bg-gray-100">
                      <th className="p-2 text-left">Имя</th>
                      <th className="p-2 text-left">Статус</th>
                      <th className="p-2 text-left">Образ</th>
                      <th className="p-2 text-left">Порты</th>
                      <th className="p-2 text-left">Создан</th>
                      <th className="p-2 text-left">Действия</th>
                    </tr>
                  </thead>
                  <tbody>
                    {containers.map(container => (
                      <tr key={container.id} className="border-t">
                        <td className="p-2">{container.name}</td>
                        <td className="p-2">
                          <span className="px-2 py-1 bg-green-100 text-green-800 rounded-full text-xs">
                            {container.status}
                          </span>
                        </td>
                        <td className="p-2">{container.image}</td>
                        <td className="p-2">
                          {container.ports.map((port, index) => (
                            <div key={index} className="flex items-center gap-1">
                              <a 
                                href={`http://${port.split(':')[0]}`} 
                                target="_blank" 
                                rel="noopener noreferrer"
                                className="text-blue-600 hover:underline flex items-center gap-1"
                              >
                                {port} <ExternalLink size={14} />
                              </a>
                            </div>
                          ))}
                        </td>
                        <td className="p-2">{container.created}</td>
                        <td className="p-2">
                          <button className="px-2 py-1 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 text-xs">
                            Перезапустить
                          </button>
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="api" className="space-y-4">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <Card>
              <CardHeader>
                <CardTitle>Anthropic API</CardTitle>
                <CardDescription>Claude & API использование</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="text-3xl font-bold">$21.2</div>
                <div className="text-sm text-gray-500">Затраты за текущий месяц</div>
                <div className="mt-2 text-sm text-green-600">+38.6% по сравнению с предыдущим месяцем</div>
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle>ChatGPT API</CardTitle>
                <CardDescription>OpenAI платформа</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="text-3xl font-bold">$14.5</div>
                <div className="text-sm text-gray-500">Затраты за текущий месяц</div>
                <div className="mt-2 text-sm text-green-600">+43.6% по сравнению с предыдущим месяцем</div>
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle>Perplexity API</CardTitle>
                <CardDescription>Perplexity использование</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="text-3xl font-bold">$8.4</div>
                <div className="text-sm text-gray-500">Затраты за текущий месяц</div>
                <div className="mt-2 text-sm text-green-600">+35.5% по сравнению с предыдущим месяцем</div>
              </CardContent>
            </Card>
          </div>

          <Card>
            <CardHeader>
              <CardTitle>Затраты по месяцам</CardTitle>
              <CardDescription>Сравнение затрат на API разных сервисов</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="h-80">
                <ResponsiveContainer width="100%" height="100%">
                  <BarChart data={apiUsage}>
                    <CartesianGrid strokeDasharray="3 3" />
                    <XAxis dataKey="name" />
                    <YAxis />
                    <Tooltip />
                    <Legend />
                    <Bar dataKey="Anthropic" fill="#8884d8" />
                    <Bar dataKey="ChatGPT" fill="#82ca9d" />
                    <Bar dataKey="Perplexity" fill="#ffc658" />
                  </BarChart>
                </ResponsiveContainer>
              </div>
            </CardContent>
          </Card>

          <Card>
            <CardHeader>
              <CardTitle>Ежедневные запросы</CardTitle>
              <CardDescription>Количество запросов к каждому API сервису</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="h-80">
                <ResponsiveContainer width="100%" height="100%">
                  <LineChart data={dailyRequests}>
                    <CartesianGrid strokeDasharray="3 3" />
                    <XAxis dataKey="date" />
                    <YAxis />
                    <Tooltip />
                    <Legend />
                    <Line type="monotone" dataKey="Anthropic" stroke="#8884d8" activeDot={{ r: 8 }} />
                    <Line type="monotone" dataKey="ChatGPT" stroke="#82ca9d" />
                    <Line type="monotone" dataKey="Perplexity" stroke="#ffc658" />
                  </LineChart>
                </ResponsiveContainer>
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
};

export default Dashboard;